(()=>{"use strict";var e={402:(e,t,n)=>{n.d(t,{Z:()=>p});var r=n(15),i=n.n(r),a=n(645),o=n.n(a),s=n(667),c=n.n(s),l=n(543),u=n(423),h=o()(i()),d=c()(l.Z),f=c()(u.Z);h.push([e.id,"* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    background-color: rgb(186, 243, 235);\r\n}\r\n\r\n#board {\r\n    width: 600px;\r\n    height: 600px;\r\n    margin: 0 auto;  \r\n}\r\n\r\n#board div {\r\n width: 60px;\r\n height: 60px;\r\n border: 1px black solid;\r\n float: left;\r\n background-color: seashell;\r\n}\r\nsection#params {\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    padding: 10px 0;\r\n    background-color: seashell;\r\n    border: 1px black solid;\r\n    border-radius: 5px;\r\n    width: 200px;\r\n    \r\n}\r\n\r\n.ania {\r\n    background-image: url("+d+");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n.potato {\r\n    background-image: url("+f+");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n\r\n","",{version:3,sources:["webpack://src/css/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,cAAc;AAClB;;AAEA;CACC,WAAW;CACX,YAAY;CACZ,uBAAuB;CACvB,WAAW;CACX,0BAA0B;AAC3B;AACA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,eAAe;IACf,0BAA0B;IAC1B,uBAAuB;IACvB,kBAAkB;IAClB,YAAY;;AAEhB;;AAEA;IACI,yDAAwC;IACxC,4BAA4B;IAC5B,sBAAsB;EACxB;AACF;IACI,yDAA0C;IAC1C,4BAA4B;IAC5B,sBAAsB;EACxB",sourcesContent:["* {\r\n    box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n    background-color: rgb(186, 243, 235);\r\n}\r\n\r\n#board {\r\n    width: 600px;\r\n    height: 600px;\r\n    margin: 0 auto;  \r\n}\r\n\r\n#board div {\r\n width: 60px;\r\n height: 60px;\r\n border: 1px black solid;\r\n float: left;\r\n background-color: seashell;\r\n}\r\nsection#params {\r\n    text-align: center;\r\n    margin: 20px auto;\r\n    padding: 10px 0;\r\n    background-color: seashell;\r\n    border: 1px black solid;\r\n    border-radius: 5px;\r\n    width: 200px;\r\n    \r\n}\r\n\r\n.ania {\r\n    background-image: url('../img/ania.png');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n.potato {\r\n    background-image: url('../img/potato.png');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n  }\r\n\r\n"],sourceRoot:""}]);const p=h},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(i[o]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&i[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),t.push(c))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,i=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,i=!1,a=void 0;try{for(var o,s=e[Symbol.iterator]();!(r=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){i=!0,a=e}finally{try{r||null==s.return||s.return()}finally{if(i)throw a}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=i[1],o=i[3];if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),l="/*# ".concat(c," */"),u=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[a].concat(u).concat([l]).join("\n")}return[a].join("\n")}},667:e=>{e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},543:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"1e092abe4fc1bb2ac9761591ac08d350.png"},423:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"51f6f26d42aac912a3fc2f9b4e450d78.png"},379:(e,t,n)=>{var r,i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function o(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function s(e,t){for(var n={},r=[],i=0;i<e.length;i++){var s=e[i],c=t.base?s[0]+t.base:s[0],l=n[c]||0,u="".concat(c," ").concat(l);n[c]=l+1;var h=o(u),d={css:s[1],media:s[2],sourceMap:s[3]};-1!==h?(a[h].references++,a[h].updater(d)):a.push({identifier:u,updater:v(d,t),references:1}),r.push(u)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var o=i(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var l,u=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function h(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,i);else{var a=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(a,o[t]):e.appendChild(a)}}function d(e,t,n){var r=n.css,i=n.media,a=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var f=null,p=0;function v(e,t){var n,r,i;if(t.singleton){var a=p++;n=f||(f=c(t)),r=h.bind(null,n,a,!1),i=h.bind(null,n,a,!0)}else n=c(t),r=d.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=o(n[r]);a[i].references--}for(var c=s(e,t),l=0;l<n.length;l++){var u=o(n[l]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=c}}}}},t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(379),t=n.n(e),r=n(402);t()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const i=function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=t,this.y=n,this.direction=r},a=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.x=Math.floor(10*Math.random()),this.y=Math.floor(10*Math.random())};function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}const s=function(){function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.board=document.querySelectorAll("#board div"),this.ania=new i(0,0,"right"),this.potato=new a,this.score=0,this.level="VERY EASY",this.idSetInterval=setInterval((function(){t.moveAnia()}),500),this.scoreText=document.querySelector("#score strong"),this.levelText=document.querySelector("#level strong"),this.levelText.innerText=this.level}var t,n;return t=e,(n=[{key:"index",value:function(e,t){return e+10*t}},{key:"showAnia",value:function(){this.board[this.index(this.ania.x,this.ania.y)].classList.add("ania")}},{key:"hideVisibleAnia",value:function(){document.querySelector(".ania").classList.remove("ania")}},{key:"showPotato",value:function(){this.board[this.index(this.potato.x,this.potato.y)].classList.add("potato")}},{key:"changeLevel",value:function(){var e=this;this.score>=5&&this.score<10?(clearInterval(this.idSetInterval),this.level="EASY",this.levelText.innerText=this.level,this.idSetInterval=setInterval((function(){e.moveAnia()}),250)):this.score>=10&&this.score<15?(clearInterval(this.idSetInterval),this.level="MEDIUM",this.levelText.innerText=this.level,this.idSetInterval=setInterval((function(){e.moveAnia()}),125)):this.score>=15&&this.score<20?(clearInterval(this.idSetInterval),this.level="HARD",this.levelText.innerText=this.level,this.idSetInterval=setInterval((function(){e.moveAnia()}),100)):this.score>=20&&this.score<25&&(clearInterval(this.idSetInterval),this.level="EXPERT",this.levelText.innerText=this.level,this.idSetInterval=setInterval((function(){e.moveAnia()}),75))}},{key:"checkPotatoCollision",value:function(){this.ania.x===this.potato.x&&this.ania.y===this.potato.y&&(this.board[this.index(this.potato.x,this.potato.y)].classList.remove("potato"),this.score+=1,this.scoreText.innerText=this.score,this.changeLevel(),this.potato=new a,this.showPotato())}},{key:"moveAnia",value:function(){this.hideVisibleAnia(),"right"===this.ania.direction?this.ania.x=this.ania.x+1:"left"===this.ania.direction?this.ania.x=this.ania.x-1:"up"===this.ania.direction?this.ania.y=this.ania.y-1:"down"===this.ania.direction&&(this.ania.y=this.ania.y+1),this.gameOver(),this.showAnia(),this.checkPotatoCollision()}},{key:"turnAnia",value:function(e){switch(e.which){case 37:this.ania.direction="left";break;case 38:this.ania.direction="up";break;case 39:this.ania.direction="right";break;case 40:this.ania.direction="down"}}},{key:"startGame",value:function(){return this.idSetInterval}},{key:"gameOver",value:function(){(this.ania.x>9||this.ania.x<0||this.ania.y>9||this.ania.y<0)&&(clearInterval(this.idSetInterval),alert("Game over! You scored "+this.score+" points."),this.hideVisibleAnia())}}])&&o(t.prototype,n),e}();document.addEventListener("DOMContentLoaded",(function(){var e=new s;e.showAnia(),e.showPotato(),e.startGame(),document.addEventListener("keydown",(function(t){return e.turnAnia(t)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,